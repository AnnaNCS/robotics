import pyhop, lab3
from pyamaze import maze, agent

def plan_to_path(plan):
    path = ""
    for action in plan:
        direction = action[0]

        if direction == 'move_south':
            path += "S"
        elif direction == 'move_east':
            path += "E"
        elif direction == 'move_west':
            path += "W"
        elif direction == 'move_north':
            path += "N"
    return path

"""m = maze(10, 10)
m.CreateMaze()
a = agent(m, shape='arrow', footprints=True)
a.position = (10, 10)"""

m2 = maze(5, 5)
print(m2.maze_map)
m2.CreateMaze(loopPercent=50)
a = agent(m2, x=5, y=5, shape='arrow', goal=(1,1), footprints=True)
a2 = agent(m2, shape='square', goal=(1,1), footprints=True)
a2.position = (5, 1)

state1 = pyhop.State('state1')
state1.column = {'robot': 5}
state1.row = {'robot': 5}
state1.map = m2.maze_map
state1.has_visited = {(1, 1): 0, (1, 2): 0, (1, 3): 0, (1, 4): 0, (1, 5): 0, (1, 6): 0, (1, 7): 0, (1, 8): 0, (1, 9): 0, (1, 10): 0,  (2, 1): 0, (2, 2): 0, (2, 3): 0, (2, 4): 0, (2, 5): 0, (2, 6): 0, (2, 7): 0, (2, 8): 0, (2, 9): 0, (2, 10): 0, (3, 1): 0, (3, 2): 0, (3, 3): 0, (3, 4): 0, (3, 5): 0, (3, 6): 0, (3, 7): 0, (3, 8): 0, (3, 9): 0, (3, 10): 0, (4, 1): 0, (4, 2): 0, (4, 3): 0, (4, 4): 0, (4, 5): 0, (4, 6): 0, (4, 7): 0, (4, 8): 0, (4, 9): 0, (4, 10): 0, (5, 1): 0, (5, 2): 0, (5, 3): 0, (5, 4): 0, (5, 5): 0, (5, 6): 0, (5, 7): 0, (5, 8): 0, (5, 9): 0, (5, 10): 0, (6, 1): 0, (6, 2): 0, (6, 3): 0, (6, 4): 0, (6, 5): 0, (6, 6): 0, (6, 7): 0, (6, 8): 0, (6, 9): 0, (6, 10): 0, (7, 1): 0, (7, 2): 0, (7, 3): 0, (7, 4): 0, (7, 5): 0, (7, 6): 0, (7, 7): 0, (7, 8): 0, (7, 9): 0, (7, 10): 0, (8, 1): 0, (8, 2): 0, (8, 3): 0, (8, 4): 0, (8, 5): 0, (8, 6): 0, (8, 7): 0, (8, 8): 0, (8, 9): 0, (8, 10): 0, (9, 1): 0, (9, 2): 0, (9, 3): 0, (9, 4): 0, (9, 5): 0, (9, 6): 0, (9, 7): 0, (9, 8): 0, (9, 9): 0, (9, 10): 0, (10, 1): 0, (10, 2): 0, (10, 3): 0, (10, 4): 0, (10, 5): 0, (10, 6): 0, (10, 7): 0, (10, 8): 0, (10, 9): 0, (10, 10): 1 }
state1.goal_column = {'robot': 1}
state1.goal_row = {'robot': 1}


#m2.tracePath({a:m2.path,a2:m2.path})
#m2.run()

plan = pyhop.pyhop(state1, [('move', 'robot')], verbose=1)

m2.tracePath({a: plan_to_path(plan), a2: plan_to_path(plan)})
m2.run()


"""
state2.map = {(1, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 0}, (1, 2): {'E': 0, 'W': 0, 'N': 0, 'S': 0},
              (1, 3): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (1, 4): {'E': 0, 'W': 1, 'N': 0, 'S': 1},
              (1, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (1, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (2, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (2, 2): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (2, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (2, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (2, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (2, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (3, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (3, 2): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (3, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (3, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1},
              (4, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (4, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 1},
              (4, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (4, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 1},
              (4, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 6): {'E': 0, 'W': 0, 'N': 0, 'S': 1},
              (5, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (5, 2): {'E': 1, 'W': 0, 'N': 0, 'S': 0},
              (5, 3): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (5, 4): {'E': 1, 'W': 1, 'N': 1, 'S': 0},
              (5, 5): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (5, 6): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, 
              (6, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 0}, (6, 2): {'E': 0, 'W': 0, 'N': 1, 'S': 0},
              (6, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (6, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 0},
              (6, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (6, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 0},
            }

state1.has_visited = {(1, 1): 0, (1, 2): 0, (1, 3): 0, (1, 4): 0, (1, 5): 0, (1, 6): 0, 
                      (2, 1): 0, (2, 2): 0, (2, 3): 0, (2, 4): 0, (2, 5): 0, (2, 6): 0, 
                      (3, 1): 0, (3, 2): 0, (3, 3): 0, (3, 4): 0, (3, 5): 0, (3, 6): 0, 
                      (4, 1): 0, (4, 2): 0, (4, 3): 0, (4, 4): 0, (4, 5): 0, (4, 6): 0, 
                      (5, 1): 0, (5, 2): 0, (5, 3): 0, (5, 4): 0, (5, 5): 0, (5, 6): 0, 
                      (6, 1): 0, (6, 2): 0, (6, 3): 0, (6, 4): 0, (6, 5): 0, (6, 6): 1}      
            """

